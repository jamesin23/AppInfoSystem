<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	 http://www.springframework.org/schema/aop
	 http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

    <import resource="applicationContext-dao.xml"/>
    <import resource="applicationContext-service.xml"/>

    <context:annotation-config />


    <!--数据源相关的独立配置-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:database.properties"/>
    </bean>

    <!--******************************** Spring整合Mybatis的配置********************************-->
    <!--数据源相关配置-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.user}" />
        <property name="password" value="${jdbc.password}" />
    </bean>
    <!--通过JNDI从服务器容器中获取DataSource资源-->
    <!--<bean class="org.springframework.jndi.JndiObjectFactoryBean" id="dataSource">
        &lt;!&ndash;通过jndiName指定引用的JNDI数据源名称 &ndash;&gt;
        <property name="jndiName" value="java:comp/env/jdbc/demo"/>
    </bean>-->

    <!-- 配置SqlSessionFactoryBean -->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
        <!-- 引用数据源组件，暂时用mybatis框架提供的自带的数据源 -->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--引用JNDI的数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!-- 引用MyBatis配置文件中的配置 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <!-- 配置SQL映射文件信息 -->
        <property name="mapperLocations">
            <list>
                 <value>classpath:mapper/**/*.xml</value>
            </list>
        </property>
    </bean>

    <!-- 扫描包中注解标注的类 -->
    <!--<context:component-scan base-package="com.bdqn.service,com.bdqn.mapper"/>-->


    <!--********************************AOP功能未使用注解前的配置********************************-->
    <!-- 声明增强方法所在的Bean -->
    <!--<bean class="com.bdqn.aop.UserServiceLogger" id="serviceLogger"/>-->
    <bean class="cn.appsys.aop.AroundLogger" id="aroundLogger"/>

    <!--********************************AOP功能使用注解后的配置********************************-->
    <aop:aspectj-autoproxy/>

    <!--********************************使用事务的相关配置 开始********************************-->
    <!-- 定义事务管理器 （未使用注解前的配置）-->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--使用注解实现事务管理的配置-->
    <tx:annotation-driven/>
    <!--********************************使用事务的相关配置 结束********************************-->

</beans>